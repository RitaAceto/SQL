-- Show Customers (their full names, customer ID, and country) who are not in the US. 
Select CustomerId, FirstName, LastName, Country
From chinook.customers
Where Country <>'US';

OR
Select CustomerId, FirstName, LastName, Country
From chinook.customers
Where Country != 'US'

-- Show only the Customers from Brazil.
Select CustomerId, FirstName, LastName, Country
From chinook.customers
Where Country != 'US'
And Country = 'Brazil';

OR 

Select *
From chinook.customers
Where Country = 'Brazil';


-- Find the Invoices of customers who are from Brazil. 
-- The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
Select InvoiceId, FirstName, LastName, InvoiceDate, BillingCountry
From invoices
Left Join customers
On customers.CustomerId = invoices.CustomerId
Where BillingCountry = 'Brazil';


-- Show the Employees who are Sales Agents.
Select * 
From chinook.employees
Where Title LIKE '%Agent'


-- Find a unique/distinct list of billing countries from the Invoice table.
Select distinct BillingCountry
From chinook.invoices;

-- Provide a query that shows the invoices associated with each sales agent. 
-- The resulting table should include the Sales Agent's full name.
Select employees.FirstName, employees.LastName, invoices.InvoiceId
From chinook.employees
Join chinook.customers
On customers.SupportRepId = employees.EmployeeId
Join chinook.invoices
On invoices.CustomerId = customers.CustomerId;


-- Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
Select customers.FirstName, customers.LastName, customers.Country, invoices.Total, employees.FirstName, employees.LastName 
From chinook.employees
Join chinook.customers
On customers.CustomerId = invoices.CustomerId
Join chinook.invoices
On customers.SupportRepId = employees.EmployeeId;


-- How many Invoices were there in 2009?
Select COUNT(*) InvoiceDate
From chinook.invoices
Where InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';


-- What are the total sales for 2009?
Select SUM(Total)
From chinook.invoices
Where invoices.InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'

OR 

Select ROUND (SUM(Total))
From chinook.invoices
Where invoices.InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'


-- Write a query that includes the purchased track name with each invoice line ID.
Select tracks.Name, invoice_items.InvoiceLineId
From chinook.tracks
Join chinook.invoice_items
On invoice_items.TrackId = tracks.TrackId;


-- Write a query that includes the purchased track name AND artist name with each invoice line ID.
Select artists.Name, tracks.Name, invoice_items.InvoiceLineId 
From chinook.invoice_items
Left Join chinook.tracks
On invoice_items.TrackId = tracks.TrackId
Inner Join chinook.albums
On albums.AlbumId = tracks.AlbumId
Left Join chinook.artists
On artists.ArtistId = albums.ArtistId;

-- Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
Select albums.Title as 'Title', tracks.Name as 'Track Name', genres.Name as 'Genre', media_types.Name as 'Media_type'
From chinook.albums
Left Join chinook.tracks
On albums.AlbumId = tracks.AlbumId
Left Join chinook.genres
On tracks.GenreId = genres.GenreId
Left Join chinook.media_types
On tracks.MediaTypeId = media_types.MediaTypeId;


-- Show the total sales made by each sales agent.
Select employees.FirstName, employees.LastName,
ROUND (SUM(invoices.Total), 2) as 'Total Sales'
From chinook.employees
Join chinook.customers
On employees.EmployeeId = customers.SupportRepId
Join chinook.invoices
On customers.CustomerId = invoices.CustomerId
WHERE employees.Title LIKE 'Sales Support Agent'
GROUP BY employees.FirstName;

-- Which sales agent made the most dollars in sales in 2009?
Select employees.FirstName, employees.LastName,
ROUND (SUM(invoices.Total), 2) as 'Most Dollar Sales'
From chinook.employees
Join chinook.customers
On employees.EmployeeId = customers.SupportRepId
Join chinook.invoices
On customers.CustomerId = invoices.CustomerId
WHERE employees.Title LIKE 'Sales Support Agent'
AND invoices.InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
GROUP BY employees.FirstName 
ORDER BY ROUND (SUM(invoices.Total), 2) DESC;

-- Find the total number of invoices for each customer along with the customer's full name, city and email.
SELECT invoices.InvoiceId, customers.FirstName, customers.LastName, customers.City, customers.Email
From chinook.customers
Join chinook.invoices
On invoices.CustomerId = customers.CustomerId
Order by invoices.InvoiceId;

-- Retrieve the track name, album, artistID, and trackID for all the albums.
Select tracks.Name, A.Name AS Artist, albums.Title AS Album, tracks.TrackId
From ((tracks Inner Join albums 
On tracks.AlbumId = albums.AlbumId)
Inner Join artists A
On A.ArtistId = albums.ArtistId);

-- Retrieve a list with the managers last name, and the last name of the employees who report to him or her
Select M.LastName AS Manager, E.LastName AS Employee
From chinook.employees E
Inner Join chinook.employees M
On E.ReportsTo = M.EmployeeId;

-- Find the name and ID of the artists who do not have albums
Select artists.name, artists.ArtistId, albums.Title
From chinook.artists
Left Join chinook.albums
On artists.ArtistId = albums.ArtistId
Where albums.ArtistId IS NULL;

-- See if there are any customers who have a different city listed in their billing city versus their customer city
Select customers.FirstName, customers.LastName, customers.City, invoices.BillingCity
From chinook.customers
Inner Join chinook.invoices
On customers.CustomerId = invoices.CustomerId
Where customers.City <> invoices.BillingCity;




