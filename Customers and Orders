-- First, let's fix messy/incorrect data: 
SELECT * 
FROM BIT_DB.customers 
WHERE length(order_id) = 6
AND order_id <> 'Order ID';

-- How many orders were placed in January?
SELECT * FROM BIT_DB.customers, BIT_DB.JanSales
WHERE length(orderID) = 6
AND order_id <> 'Order ID' LIMIT 10;

-- How many of those orders were for an iPhone?
SELECT * FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> ' '
AND product = 'iPhone';

-- Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT acctnum 
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

-- Which product was the cheapest one sold in January, and what was the price?
SELECT MIN(price) FROM BIT_DB.JanSales;

SELECT DISTINCT Product, price
FROM BIT_DB.JanSales
WHERE price IN (SELECT MIN(price) FROM BIT_DB.JanSales)
AND length(orderid) = 6
AND orderid <> 'Order ID';

SELECT product, price
FROM BIT_DB.JanSales
ORDER BY price ASC LIMIT 1;

-- What is the total revenue for each product sold in January? 
SELECT 
SUM(price*Quantity) AS Total_Revenue, Product
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY Product;

OR 

SELECT
(SUM(Quantity)*price) AS Total_Revenue, Product
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY PRODUCT;

-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT sum(Quantity), product, sum(quantity)*price as revenue
FROM BIT_DB.FebSales 
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

-- How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(DISTINCT Cust.acctnum), ROUND ((AVG(quantity*price)))
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers Cust
ON Feb.orderID = Cust.order_id
WHERE Feb.Quantity > 2
AND length(orderid) = 6 
AND orderid <> 'Order ID';

-- List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, Quantity
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product;

-- Which locations in New York received at least 3 orders in January, and how many orders did they each receive? (Hint: use HAVING)
SELECT DISTINCT (location), COUNT(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP BY location
HAVING COUNT(orderID)>2;

-- How many of each type of headphone were sold in February?
 SELECT SUM(Quantity), Product
 FROM BIT_DB.FebSales
WHERE Product LIKE '%headphone%'
GROUP BY Product;

-- What was the average amount spent per account in February? 
SELECT SUM(Quantity*price)/ COUNT(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers Cust
ON Feb.OrderID = cust.order_ID
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

-- What was the average quantity of products purchased per account in February? 
SELECT SUM(Quantity)/COUNT(Cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers Cust
ON Feb.orderid = Cust.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

-- Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT DISTINCT Product, ROUND (SUM(Quantity*price))
FROM BIT_DB.FebSales
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'
ORDER BY SUM(Quantity*price) DESC
LIMIT 1;
