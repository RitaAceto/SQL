CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL);

SELECT * FROM BIT_DB.Spotifydata;

-- What is the average danceability by artist and track? 
SELECT ROUND (AVG(danceability), 3)
FROM BIT_DB.Spotifydata
ORDER BY artist_name, track_name;

-- What artist released the longest song?
SELECT artist_name, track_name, duration_ms
FROM BIT_DB.Spotifydata 
ORDER BY duration_ms DESC LIMIT 1;

-- What are the top 10 more energetic songs?
SELECT artist_name, track_name, energy
FROM BIT_DB.Spotifydata 
ORDER BY energy DESC LIMIT 10;

-- Who are the top 10 artists based on popularity? 
SELECT artist_name
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC LIMIT 10;

-- What's the average danceability for the 10 most popular songs?
SELECT track_name, popularity, AVG(danceability), popularity 
FROM BIT_DB.Spotifydata 
GROUP BY track_name 
ORDER BY popularity DESC
LIMIT 10;

-- Calculate the average popularity for the artists in the Spotify data table. 
SELECT artist_name, AVG(Spotifydata.popularity) AS avg_popularity
FROM SpotifyData
GROUP BY Spotifydata.artist_name
ORDER BY avg_popularity DESC;

-- Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH popAVG_CTE AS (
SELECT artist_name, AVG(Spotifydata.popularity) AS avg_popularity
FROM SpotifyData
GROUP BY Spotifydata.artist_name
)
SELECT  artist_name,
        avg_popularity,
        'TopStar' AS tag
FROM popAVG_CTE
WHERE avg_popularity>=90;

